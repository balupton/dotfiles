#!/usr/bin/env bash

# https://github.com/casey/intermodal

# https://github.com/juliensalinas/torrengo

# https://github.com/rndusr/torf-cli

# https://github.com/rndusr/stig
# pipx run stig add "$search"
# stig -h cmds

# https://github.com/florinutz/yts
# env CARGO='yts' setup-util cargo
# yts list "$filename"

# https://github.com/bleusakura/magnetfinder
# env CARGO='magnetfinder' setup-util cargo
# magnetfinder -yq "$filename" --sort size
# ^ doesn't work well programmatically

# https://crates.io/crates/tpb
# tpb -q
# ^ doesn't work

# https://github.com/rnestler/attractorr aka torrent-search
# https://github.com/rnestler/attractorr/issues/55
# CARGO='--git https://github.com/rnestler/attractorr --tag v0.2.0'

# magnetfinder
# https://github.com/bleusakura/magnetfinder

function magnet_search() (
	source "$DOROTHY/sources/bash.bash"

	# dependencies
	setup-util --quiet --cli='attractorr' \
		CARGO='--git https://github.com/rnestler/attractorr'
	setup-util --quiet --cli='magnetfinder' \
		CARGO='magnetfinder'

	# prepare
	local search="$1" lines=() line
	__split --target={lines} --no-zero-length --stdin < <(attractorr --sort=seeders "$search" 2>&1 || :)
	for line in "${lines[@]}"; do
		line="$(echo-trim-colors -- "$line")"
		if [[ -z $line ]] || echo-regexp -q --regexp='ERROR|No results|btih:000000000000' -- "$line"; then
			continue
		fi
		__print_lines "$line"
	done

	source "$DOROTHY/sources/ripgrep.bash"
	__split --target={lines} --no-zero-length --stdin < <(magnetfinder --no-interactive --show 5 -aq "$search" 2>/dev/null | rg --invert-match --fixed-strings --regexp='No torrents found matching search query' || :)
	__split --source={lines} --delimiter=$'\t'
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	magnet_search "$@"
fi
