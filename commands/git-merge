#!/usr/bin/env bash

function git_merge() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checkout the main branch, merge the specified branch, push the changes, delete the specified branch.

			USAGE:
			git-merge <branch>

			OPTIONS:
			<branch>
			    If not specified, the current branch will be used.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_branch=''
	while [[ "$#" -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--branch='*) option_branch="${item#*=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if [[ -z "$option_branch" ]]; then
				option_branch="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# fetch active branch
	if [[ -z "$option_branch" ]]; then
		option_branch="$(get-git-active-branch)"
	fi

	# fetch default branch to checkout
	local default_branch
	default_branch="$(get-git-default-branch)"

	# ensure the two branches are different
	if [[ "$default_branch" = "$option_branch" ]]; then
		echo-error "The default branch and the specified branch are the same: $default_branch"
		return 22 # EINVAL 22 Invalid argument
	fi

	# =======================================================
	# Action

	eval-helper --wrap --verbose --confirm -- git checkout "$default_branch"
	eval-helper --wrap --verbose --confirm -- git merge --no-commit "$option_branch"
	eval-helper --wrap --verbose --confirm -- git push
	eval-helper --wrap --verbose --confirm -- gtd "$option_branch"
)

# fire if invoked standalone
if [[ "$0" = "${BASH_SOURCE[0]}" ]]; then
	git_merge "$@"
fi
