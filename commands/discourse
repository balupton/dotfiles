#!/usr/bin/env bash

# https://discuss.bevry.me/t/creating-managing-a-discourse-instance/691?u=balupton

function discourse() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Setup or Login into a Discourse Instance

			USAGE:
			discourse [...options]

			OPTIONS:
			--action=<action>
			    The action to perform. Can be either 'login' or 'setup'.
			    Default is 'setup'.

			--ssh-ip=<ip>
			    The IP address of the server to connect to.

			--ssh-key-internal=<key>
			    The name of the SSH key inside the server to access the configuration repository.

			--ssh-pass-internal=<password>
			    The password for the SSH key inside the server to access the configuration repository.

			--git-remote=<remote>
			    The git remote for the discourse instance to access the configuration repository.

			--git-branch=<branch>
			    The git branch for the discourse instance to access the configuration repository.
			    Defaults to 'main'.

			--container=<container>
			    The name of the discourse container to setup.
			    Defaults to 'app'.
		EOF
		if [[ $# -ne 0 ]]; then
			__print_error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item action='' option_ssh_ip='' option_git_ssh_key='' option_git_ssh_pass='' option_git_remote='' option_git_branch='' option_container=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		--help | -h) help ;;
		--action=*) __flag --source={item} --target={action} ;;
		--ssh-ip=*) __flag --source={item} --target={option_ssh_ip} ;;
		--git-ssh-key=*) __flag --source={item} --target={option_git_ssh_key} ;;
		--git-ssh-pass=*) __flag --source={item} --target={option_git_ssh_pass} ;;
		--git-remote=*) __flag --source={item} --target={option_git_remote} ;;
		--git-branch=*) __flag --source={item} --target={option_git_branch} ;;
		--container*) __flag --source={item} --target={option_container} ;;
		--*) __unrecognised_flag "$item" || return ;;
		*) __unrecognised_argument "$item" || return ;;
		esac
	done

	# validate
	if [[ -z $option_ssh_ip ]]; then
		option_ssh_ip="$(ask --required --question='What is the IP address of the server to connect to?')"
	fi
	if [[ -z $action ]]; then
		action="$(choose --required --question='Which action do you wish to take?' -- 'login' 'setup')"
	fi

	# log
	echo-style --invert="Entering $option_ssh_ip"

	# do login
	if [[ $action == 'login' ]]; then
		eval-helper --until=success --wrap --verbose -- ssh "$option_ssh_ip"
		return 0
	fi

	# do setup
	local discourse_init
	discourse_init="
GIT_SSH_KEY='$option_git_ssh_key'
GIT_SSH_PASS='$option_git_ssh_pass'
GIT_REMOTE='$option_git_remote'
GIT_BRANCH='$option_git_branch'
CONTAINER='$option_container'
$(<"$DOROTHY/user/commands/discourse-setup")
"
	if ssh -t "$option_ssh_ip" "$discourse_init" && echo-style --success='Successfully setup the discourse instance. ðŸŽ‰'; then
		return 0
	else
		echo-style --stderr --error='Error: Failed to setup the discourse instance. ðŸš¨' || return
		return 1
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	discourse "$@"
fi
